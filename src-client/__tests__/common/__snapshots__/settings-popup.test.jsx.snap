// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly 1`] = `
<SettingsPopup>
  <WithStyles(ForwardRef(IconButton))
    aria-haspopup="true"
    aria-label="Uploads"
    className="icon-btn"
    onClick={[Function]}
  >
    <ForwardRef(IconButton)
      aria-haspopup="true"
      aria-label="Uploads"
      className="icon-btn"
      classes={
        Object {
          "colorInherit": "MuiIconButton-colorInherit",
          "colorPrimary": "MuiIconButton-colorPrimary",
          "colorSecondary": "MuiIconButton-colorSecondary",
          "disabled": "Mui-disabled",
          "edgeEnd": "MuiIconButton-edgeEnd",
          "edgeStart": "MuiIconButton-edgeStart",
          "label": "MuiIconButton-label",
          "root": "MuiIconButton-root",
          "sizeSmall": "MuiIconButton-sizeSmall",
        }
      }
      onClick={[Function]}
    >
      <WithStyles(ForwardRef(ButtonBase))
        aria-haspopup="true"
        aria-label="Uploads"
        centerRipple={true}
        className="MuiIconButton-root icon-btn"
        disabled={false}
        focusRipple={true}
        onClick={[Function]}
      >
        <ForwardRef(ButtonBase)
          aria-haspopup="true"
          aria-label="Uploads"
          centerRipple={true}
          className="MuiIconButton-root icon-btn"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          disabled={false}
          focusRipple={true}
          onClick={[Function]}
        >
          <button
            aria-haspopup="true"
            aria-label="Uploads"
            className="MuiButtonBase-root MuiIconButton-root icon-btn"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            <span
              className="MuiIconButton-label"
            >
              <ForwardRef(SettingsIcon)
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                <WithStyles(ForwardRef(SvgIcon))
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  <ForwardRef(SvgIcon)
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction",
                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                        "colorError": "MuiSvgIcon-colorError",
                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                        "root": "MuiSvgIcon-root",
                      }
                    }
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  >
                    <svg
                      aria-hidden={true}
                      className="MuiSvgIcon-root"
                      focusable="false"
                      style={
                        Object {
                          "color": "white",
                        }
                      }
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </WithStyles(ForwardRef(SvgIcon))>
              </ForwardRef(SettingsIcon)>
            </span>
            <WithStyles(memo)
              center={true}
            >
              <ForwardRef(TouchRipple)
                center={true}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child",
                    "childLeaving": "MuiTouchRipple-childLeaving",
                    "childPulsate": "MuiTouchRipple-childPulsate",
                    "ripple": "MuiTouchRipple-ripple",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                    "root": "MuiTouchRipple-root",
                  }
                }
              >
                <span
                  className="MuiTouchRipple-root"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component={null}
                    exit={true}
                  />
                </span>
              </ForwardRef(TouchRipple)>
            </WithStyles(memo)>
          </button>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(IconButton)>
  </WithStyles(ForwardRef(IconButton))>
  <ForwardRef(Popper)
    anchorEl={null}
    disablePortal={true}
    open={false}
    placement="bottom-end"
    style={
      Object {
        "zIndex": 1100,
      }
    }
    transition={true}
  />
</SettingsPopup>
`;
